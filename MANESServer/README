The MANES server uses Apache Maven (maven.apache.org) for library
dependency management and the build process.  Ensure that Maven is
installed. The 'pom.xml' describes the MANES server project and its
dependencies.

Maven specifies a standard directory layout for files.  Please review
the following URL for an overview of this structure.
http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html

SETUP FOR DEVELOPMENT WITH ECLIPSE 

The Eclipse .classpath and .project files are not versioned, but
instead generated by the Maven Eclipse
plugin. (http://maven.apache.org/guides/mini/guide-ide-eclipse.html)

1) Maven stores all library dependencies (i.e., 3rd party jars) in a
   central repository (e.g., ~/.m2/repository).  Add a workspace
   variable M2_REPO to your Eclipse workspace by executing the
   following Maven command. All references to libraries in the
   generated .classpath file will be relative to M2_REPO. This must be
   done once per workspace.

   'mvn -Declipse.workspace=<path-to-eclipse-workspace> eclipse:configure-workspace'

2) Generate the .project and .classpath files by executing the
   following Maven command. This must be repeated whenever the
   dependencies defined in 'pom.xml' change.

   'mvn eclipse:eclipse'

BUILDING, TESTING, and PACKAGING from Maven

Eclipse can be used for compilation and executing during active
development.  The Maven can be used without configuring or running
Eclipse.  The following list highlights the most useful targets. See a
Maven tutorial for full descriptions of all targets.

Compile application code:	'mvn compile'
Compile test code:  		'mvn test-compile'
Run JUnit tests:		'mvn verify'
Build deployable jar:		'mvn package'
