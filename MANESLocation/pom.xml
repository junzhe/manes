<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
           http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- This file uses tab size = 2, expand tabs with spaces -->
	<modelVersion>4.0.0</modelVersion>

	<!-- Identity of our MANES server module -->
	<groupId>org.whispercomm.manes</groupId>
	<artifactId>manes-location</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<!-- Tell maven that our source files are UTF-8 encoded -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.10</junit.version>
	</properties>

	<repositories>
		<!-- Internal Whispercomm Repository, set up pubkey in settings.xml -->
		<repository>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
			<id>org.whispercomm.maven.repo</id>
			<url>scp://ziyang.eecs.umich.edu:/fserver/maven/whispercomm</url>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>org.whispercomm.maven.repo</id>
			<uniqueVersion>true</uniqueVersion>
			<url>scp://ziyang.eecs.umich.edu:/fserver/maven/whispercomm</url>
		</repository>
	</distributionManagement>

	<build>
		<!-- Extension to access a repository over ssh -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.2</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<!-- Use a different jar for the jar phase vs. the shade phase -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>${project.artifactId}-${project.version}-tmp</finalName>
				</configuration>
			</plugin>
			<plugin>
				<!-- Install maven plugin for compilation. Specifiy JDK version. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- Use eclipse plugin. Run 'mvn eclipse:eclipse' to build .project 
					and .classpath. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<!-- Download sources and javadoc jars and attach via Eclipse .classpath. -->
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<!-- Use surefire plugin in to execute unit tests. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.11</version>
				<configuration>
					<excludes>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
